#! bin/bash

# #génération de liste de trigrammes d'affixes de mots
# python main.py -s train/* -t chars -n 3
# python features_filter.py -f feature_list_chars3grams5000mf.json --affixes_grams

# #on s'appuie sur la liste des trigrammes d'affixes pour dresser les caractéristiques
# python main.py -s train/* -t chars -n 3 -f feature_list_chars3grams5000mf_affixes.json 
# python split.py feats_tests_n3_k_5000.csv

# #entraînement du moèdle en validation croisée leave-one-out
# python train_svm.py feats_tests_n3_k_5000_train.csv --cross_validate leave-one-out

# #à partir de la même liste de trigrammes d'affixes, on dresse les caractéristiques des textes anonymes
# mv feature_list_chars3grams5000mf_affixes.json -f feature_list_train.json
# python main.py -s test/* -t chars -n 3 -f feature_list_train.json

# #final prediction
# python train_svm.py train.csv --test_path feats_tests_n3_k_5000.csv --norms --final
# mv FINAL_PREDICTIONS.csv FINAL_PREDICTIONS_App65.csv


python main.py -s train/* -t chars -n 3 -x txt
mv feats_tests_n3_k_5000.csv train.csv
python main.py -s test/* -t chars -n 3 -f feature_list_chars3grams5000mf.json -x txt
mv feats_tests_n3_k_5000.csv test.csv
python train_svm.py train.csv --test_path test.csv --norms --final


